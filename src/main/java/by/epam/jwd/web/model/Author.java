package by.epam.jwd.web.model;

import java.util.Objects;

/**
 * Entity that represents book author.
 * @author roma0
 * @version 1.0
 * @since 1.0
 */
public class Author implements DbEntity {
    private final Long id;
    private final String name;

    /**
     * Author constructor with id from database.
     * Used when it's need to map database table data to class instance.
     * @param id author id
     * @param name author name
     */
    public Author(Long id, String name) {
        this.id = id;
        this.name = name;
    }

    /**
     * Author constructor without id.
     * Used when need to save author data in database.
     * @param name author name
     */
    public Author(String name) {
        this(null, name);
    }

    /**
     * Returns author id generated by database
     * @return author id
     */
    @Override
    public Long getId() {
        return id;
    }

    /**
     * Returns author name.
     * @return author name.
     */
    public String getName() {
        return name;
    }

    /**
     * Check whether two instances of class is equal to each other.
     * @param o other class instance
     * @return {@code true} if instances are equals to each other {@code false} otherwise.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Author that = (Author) o;
        return Objects.equals(id, that.id) && Objects.equals(name, that.name);
    }

    /**
     * Returns instance hash code.
     * @return instance hash code.
     */
    @Override
    public int hashCode() {
        return Objects.hash(id, name);
    }

    /**
     * Returns instance string representation.
     * @return instance string representation.
     */
    @Override
    public String toString() {
        return "BookAuthor{" +
                "id=" + id +
                ", name='" + name + '\'' +
                '}';
    }
}
